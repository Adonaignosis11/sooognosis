misc list of things todo:

for next release?
-----------------

* in import function, do better check to see if it's a concorde file.
	add something to libmdc_interface for checking file types?

* add key combination-> set pixel to max threshold/set pixel to min threshold
                                                                                
* ability to import and export AIR .air files
  -probably from rotate axis page
  -need object list widget: should update automatically when something is removed somewhere else

* add free hand ROI drawing (2D and 3D)
                                                                                
* ui_series needs to be updated, to update on study changes (roi_width, line_style, etc.)

* add drag-n-drop capabilities between study windows
	don't use treeview reorderable stuff, too limited,

* export ROI's to external file? and allow import?

* histogram for roi's
  - probably an option on the ROI stat's pop-up

* continue implementing progress bars for various functions:
	-roi analysis
	-loading in data sets


windows todo
------------
* checking that file can be read on 32bit system doesn't
	currently work on windows... files: xml.c and amitk_raw_data.c
	work around is define out at the moment.  Seems to be some
	problem with mingw32 gcc and long comparisons
* zdial on rendering doesn't work
* get popt working, then can have file associations with .xif files
	-specify icon for .xif files
* preferences aren't currently saved between amide sessions
* figure out how to set the application icon


factor analysis things:
-----------------------       
* factor analysis -> should be able to do from ROI's too.
	should be simple.  1 iteration to find the # of voxels,
	second iteration to fill in 
	probable use weight >=0.5 as cutoff
* need to add orthogonality component back into PLS
* principle component analysis should probably be demeaned
* need to extend 2 comp to 3 comp (or n-comp)
* should be able to combine main function for fads and comp models


big things:
-----------
* should be able to specify units the image/display info is in, and request different output units.
	-allow changing of displayed units (mm, cm, m, s, min, uCi, Beq, etc.)
	-study would have an output units variable
	-each data set, can specify it's original units, and (if needed), a scaling factor to output unit
	-ui_preferences would change default units
	-need gobject based approach, so widgets can listen for change
	-> start with mm/cm/m
* add a data sets list item,
	-would allow reading in multi-bed data sets
	-raw_data type could have amitk_space made its parent, so it has its own space...
* calculating PV correction.  
	Correction factors could be calculated for each volume's 
	resolution and then cached.
* multi-step undo/redo, look into how other GTK apps do it
	-once this is done, drop the enact/cancel bit of shifting data sets and study's
	  as we can now just undo such a change
* add image calculator
	-you pick data set, then subtract/divide/etc. another data set from
	 picked data set, with slices grabbed via amitk_data_set_get_slice to
	 be in the coordinate set of the picked data set.


                       
small things:
-------------
* get rid of amitk_canvas view_changed signal, should just listen to
	study's version of it.  Also, canvas->center is redundant.
* should have option to use rigid body registration with scaling
* sliders don't work currently under Xwin32, stopped working 
	after 0.7.6 (addition of optional transverse/coronal/etc. buttons).
* need to switch gtk_idle (deprecated) calls to g_source calls
* try to work in the max/min/distribution calculations into the loading loop
* would changing the icons to .png files allow anti-aliasing? better icons?
* fix zooming of off angle roi's on the canvas
* should all voxel's that an roi edge passes through be displayed?
        -would mean creating roi canvas object as pixmap, similar to isocontour
* roi analysis dialog should probably be updated for any change of the roi's
* rendering movie generation should allow rotating around one axis, then another, then another
	maybe an ability to script the movie?
* ui_series, should add popup dialog allowing # columns and rows to
	be specified (best guess would be default).
	also, switch between putting time or frame number on display
* default color table -> doesn't work for data sets loaded from command line
* fly through's don't output ROI's, fiducial marks.
* ui_series, should be able to export 


pre 1.0 things:
--------------
* try to change dialog box buttons to verbs
* start commenting the widgets, run gtk-doc to generate documentation
* check README's, INSTALL guides, etc.
* check that make distcheck works
* write a man page
* add tooltips to everything....
* add more help buttons to the dialogs 
  -gnome_druid has an add help button function



probably post 1.0 things:
----------------
* add report generation.  This would add colormaps, location, thickness
	study name, volume name, scan date, etc. to the export function.
	Would handle multiple images.
* rendering alterations -> 
	3D red/green imaging
	allow rotation of light source and view in addition to object
	allow changing of material properties
	transformation to rendering structure is inefficient when doing multiple volumes,
		each volume should be transfered using it's minimal voxel size, not the
		group's maximum minimal voxel size.  the rendered images should then be scaled
		and overlapped.  
	MIP rendering would be nice....
* aligning of data using automated registration?
* could probably subclass isocontour's from AmitkRoi -> AimtkIsocontourRoi
	also probably get rid of amitk_roi_variable_types.c... not worth the performance improvement


things dependent on other things: 
-------------- 

* combine open and import menu items onto same file dialog.
	There's no reason this can't currently be done on the AMIDE side.  There's a function
	for detecting if a file/directory is a XIF, and if it's not, we just hand it off to
	libmdc.  Need to wait on a new version of the file dialog (gtk 2.4?) that allows
	specifying our own filters for figuring out what goes in the lists... XIF 
	directories need to go on the "files" side.  And also would need a drop down for 
	switching from "guess" to "import particular", like in gimp.


* antialiased canvases have been disabled again, due to instabilities with ROI resizing
	starts spewing "*** attempt to put segment in horiz list twice" errors
	and eventually core dumps.  Either a libart or libgnomecanvas bug.  Uncomment
	appropriate lines in configure.in to reenable

	last tested versions:
		libart_lgpl-2.3.14-1
		libgnomecanvas-2.3.6-1

	make sure to check that lines in tb_crop are placed correctly


* AMIDE_OSX_HACKS, on OS X we currently
	1- Disable interaction with ESD (enlightenment sound daemon).
           If amide crashed, ESD was locking files....  This is as of
	   fink 0.5.2, OS X 10.2.5


* anti-aliased canvases doesn't support GDK line styles (as of libgnomecanvas 2.2.0)
        -ui_preferences_dialog, and amitk_object_dialog define out the appropriate code 
	when antialiasing support is cmopiled in.  Add back in once anti-aliased
	canvases support line styles.

* ui_time_dialog specifies AmitkDataSet as G_TYPE_POINTER instead of
	AMITK_TYPE_OBJECT when setting up gtk_list_store - this is due
	to a gtk bug, adds a reference with G_TYPE_OBJECT but doesn't
	remove it
	- also in amitk_tree.c, ui_alignment_dialog.c

* at some point, GtkGammaCurve will probably be deprecated from Gtk,
	can either copy the code into amide, or come up with something
	more fitting

* when bug-buddy supports sourceforge bug reporting,
	delete the following line from amide.c so we can have bug reporting
	"signal(SIGSEGV, SIG_DFL);"

* remove no-ops in raw_data.c
	I've needed this (at least) for gcc <= 3.0.3.  Left in for the moment as
	I haven't tested gcc 3.1 for this bug, and other people may be using
	old versions of gcc.

* currently, alpha blending is done inside of image.c, a single pixbuf is generated,
	and this is handed to gnome_canvas.  It'd be nice to use separate pixbuf's but 
	each data set, and throwing them on the canvas.  The single biggest problem with this is 
	that the background buffer in gnome_canvas is RGB, not RGBA, so the buffer has an effective
	alpha of 0xFF, and you're just blending the image with whatever that background is, 
	screwing up the color levels.  may have to rewrite libgnomecanvas to use
	a 32bit buffer
	-would allow the use of cursor keys for moving data sets around each other


* using the gdk_pixbuf_scale functions
	Slicing from all data sets at zoom=1.0, and then scaling using
	the gdk_pixbuf_scale type functions doesn't work well, as the
	scale functions don't do a great job of interpolation (circa
	gdk-pixbuf-0.18.0).

* Current implementation is cooperative multitasking, if that.  Should turn
	program into a true, multi-threaded design.  Note that gtk for windows
	(as of 2003.04.30) does not handle multi-threaded program.... so will
	have to wait for that.

* libmdc currently links against glib1.  When (X)MedCon switches to
	GTK2/GLib2, remove the line in configure.in that overwrites
	the XMEDCON_LIBS entry.  Also, XMEDCON_CFLAGS can probably
	be includes in src/Makefile.am

* drawing graphics of ROI statistics, etc.
	Can't use Guppi, it's unmaintained and deprecated.  Hopefully the 
	gnumeric project will come out with a library for drawing charts/etc 
	at some point in the future.

	


