AC_INIT(src/amide.c)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(amide, 0.4.2)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)


GNOME_INIT
AM_PATH_GTK(1.2.0)
AM_PATH_GDK_PIXBUF(0.11.0)
GNOME_XML2_CHECK

dnl AC_ISC_POSIX
AC_PROG_CC
dnl AC_STDC_HEADERS
dnl AC_ARG_PROGRAM
AM_PROG_LIBTOOL()


GNOME_COMPILE_WARNINGS

ALL_LINGUAS=
dnl AM_GNU_GETTEXT

EXTRA_GNOME_LIBS=`gnome-config --libs gnomeui gdk_pixbuf gnomecanvaspixbuf`
EXTRA_GNOME_CFLAGS=`gnome-config --cflags gnomeui gdk_pixbuf gnomecanvaspixbuf`

dnl add the -no-cpp-precomp for macintosh os x
case "$host_os" in
darwin*) 	echo "removing preproccessor precompilition on macintosh os x" ; 
		CPPFLAGS="$CPPFLAGS -no-cpp-precomp" ;;
esac




dnl Let people compile without debugging information
AC_ARG_ENABLE(
	amide_debug, 
	[  --enable-amide-debug	Compile with some debugging messages [default=yes]], 
	enable_amide_debug="$enableval", 
	enable_amide_debug=yes)

if test $enable_amide_debug = yes; then
	echo "Compiling with AMIDE debugging messages"
	AC_DEFINE(AMIDE_DEBUG)
	CFLAGS="$CFLAGS -g"
else
	echo "Compiling without AMIDE debugging messages"
fi




dnl Let people compile without having libecat (z_matrix_70)
AC_ARG_ENABLE(
	libecat, 
	[  --enable-libecat	Compile with the libecat/CTI library [default=yes]],
	enable_libecat="$enableval",
	enable_libecat=yes)

if test $enable_libecat = yes; then
	echo "Compiling with libecat/CTI file support"
	AMIDE_LIBECAT_LIBS="-lecat"
	AC_SUBST(AMIDE_LIBECAT_LIBS)
	AC_DEFINE(AMIDE_LIBECAT_SUPPORT)
else
	echo "Compiling without libecat/CTI file support"
fi





dnl Let people compile without having libmdc
AC_ARG_ENABLE(
	libmdc, 
	[  --enable-libmdc	Compile with the xmedcon/libmdc library [default=yes]], 
	enable_libmdc="$enableval", 
	enable_libmdc=yes)

if test $enable_libmdc = yes; then
	echo "Compiling with xmedcon/libmdc file support"
	AMIDE_LIBMDC_LIBS="-lmdc"
	AC_SUBST(AMIDE_LIBMDC_LIBS)
	AC_DEFINE_UNQUOTED(AMIDE_LIBMDC_SUPPORT)
else
	echo "Compiling without xmedcon/libmdc file support"
fi


dnl Let people compile without rendering/libvolpack
AC_ARG_ENABLE(
	libvolpack, 
	[  --enable-libvolpack	Compile with libvolpack rendering support [default=yes]], 
	enable_libvolpack="$enableval", 
	enable_libvolpack=yes)

if test $enable_libvolpack = yes; then
	echo "Compiling with libvolpack rendering support "
	AMIDE_LIBVOLPACK_LIBS="-lvolpack"
	AC_SUBST(AMIDE_LIBVOLPACK_LIBS)
	AC_DEFINE_UNQUOTED(AMIDE_LIBVOLPACK_SUPPORT)
else
	echo "Compiling without libvolpack rendering support"
fi


dnl Let people compile without mpeg_encode
AC_ARG_ENABLE(
	mpeg_encode, 
	[  --enable-mpeg-encode	Compile with mpeg_encode movie support [default=yes]], 
	enable_mpeg_encode="$enableval", 
	enable_mpeg_encode=yes)

if test $enable_mpeg_encode = yes; then
	echo "Compiling with mpeg_encode movie support "
	AC_DEFINE_UNQUOTED(AMIDE_MPEG_ENCODE_BIN, "mpeg_encode")
	AC_DEFINE_UNQUOTED(AMIDE_MPEG_ENCODE_SUPPORT)
else
	echo "Compiling without mpeg_encode movie support"
fi


AC_SUBST(EXTRA_GNOME_LIBS)
AC_SUBST(EXTRA_GNOME_CFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
pixmaps/Makefile
doc/Makefile
doc/C/Makefile
src/Makefile
lib/Makefile
etc/Makefile
etc/amide.spec]) 

