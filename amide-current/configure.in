dnl ===============================================================================
dnl              Configure script for AMIDE
dnl ===============================================================================
AC_PREREQ(2.53)
AC_INIT([amide],[0.8.5],[amide-users@lists.sourceforge.net])

AC_CONFIG_SRCDIR(src/amide.c)
AM_CONFIG_HEADER(amide_config.h)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)


AM_MAINTAINER_MODE

AC_PROG_CC
AM_PROG_LIBTOOL
AC_PATH_PROGS(M4, gnum4 gm4 m4, m4)
AC_FUNC_MKDIR

AC_CHECK_HEADERS(unistd.h, AC_DEFINE(HAVE_UNISTD_H))

dnl ================= translation =============================================

GETTEXT_PACKAGE=amide
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Define the gettext package to be used])

ALL_LINGUAS="zh_CN"
AM_GLIB_GNU_GETTEXT
AC_PROG_INTLTOOL


dnl ===============================================================================
dnl pick our optimization level, OSX's version of gcc doesn't handle -O6
case "$host_os" in
darwin*) 	CFLAGS="-g -O2 -Wall";;
*)		CFLAGS="-g -O6 -Wall";;
esac

if test $CC = "gcc"; then
	echo -n "checking version of gcc... "
	CC_VERSION=`$CC -dumpversion`
	if (test $CC_VERSION = "2.96" || test $$CC_VERSION = "2.95.4"); then
		echo $CC_VERSION
		echo "******************************************************************"
		echo "This version of gcc is a beta compiler and often incorrectly"
		echo "compiles this program.  Please upgrade to the current version of"
		echo "gcc (3.2.1 as of this writing) or downgrade to 2.95.3"
		echo "******************************************************************"
		echo -n "continue anyway? (y/n) "
		read continue_with_bad_gcc
		if test $continue_with_bad_gcc = "y"; then
			echo "removing optimizations to reduce potential of compiler error"
			CFLAGS="-g -O0"
		else
			exit 1
		fi
	else
		echo "$CC_VERSION, good"
	fi
fi



PKG_CHECK_MODULES(AMIDE_GNOME,[
	glib-2.0	>= 2.0.0
	gobject-2.0	>= 2.0.0
	gtk+-2.0	>= 2.0.0
	libxml-2.0	>= 2.4.12
	libgnomecanvas-2.0 >= 2.0.0
	libgnomeui-2.0  >= 2.0.0
])

AC_SUBST(AMIDE_GNOME_LIBS)
AC_SUBST(AMIDE_GNOME_CFLAGS)

dnl glib-genmarshal
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

dnl This is installed from GTK+ 2.0's gdk-pixbuf
AC_PATH_PROG(GDK_PIXBUF_CSOURCE, gdk-pixbuf-csource)
test -z "$GDK_PIXBUF_CSOURCE" && AC_MSG_ERROR([
*** You need the gdk-pixbuf-csource tool which is installed
*** from GTK+ 2's gdk-pixbuf.
***
*** Either the location where you installed your GTK+ 2 is
*** not in your PATH or something is screwed up with your
*** GTK+ 2 installation
])


dnl record if our version of libgnomecanvas can handle anti-aliasing
PKG_CHECK_MODULES(dummy, 
	[libgnomecanvas-2.0 >= 2.2.0], 
	 enable_antialiasing=yes, enable_antialiasing=no)
dnl if test $enable_antialiasing = yes; then
dnl	echo "Compiling with libgnomecanvas antialiasing support"
dnl	AC_DEFINE(AMIDE_LIBGNOMECANVAS_AA, 1, Define to compile AMIDE with an antialiased canvas)
dnl else
	echo "Compiling without libgnomecanvas antialiasing support"
dnl	AC_DEFINE(AMIDE_LIBGNOMECANVAS_AA, 0, Define to compile AMIDE with an antialiased canvas)
dnl fi



################################################################
# Checks for gtk-doc and docbook-tools, from gtk's configure.in
################################################################

GTK_DOC_CHECK([1.0])

AC_CHECK_PROG(DB2HTML, db2html, true, false)
AM_CONDITIONAL(HAVE_DOCBOOK, $DB2HTML)








##############################################################
### Checks for optional libraries
##############################################################

dnl check for various libraries and programs that we might need
AM_PATH_GSL(1.1.1, FOUND_LIBGSL=yes, FOUND_LIBGSL=no)
AC_CHECK_LIB(ecat, matrix_open, FOUND_LIBECAT=yes, FOUND_LIBECAT=no, -L/sw/lib)
AC_CHECK_LIB(volpack, vpGetErrorString, FOUND_VOLPACK=yes, FOUND_VOLPACK=no, -lm -L/sw/lib)
AM_PATH_XMEDCON(0.9.6, FOUND_XMEDCON=yes, FOUND_XMEDCON=no)
AM_PATH_LIBFAME(0.9.0, FOUND_LIBFAME=yes, FOUND_LIBFAME=no)


dnl add the -no-cpp-precomp for macintosh os x
case "$host_os" in
darwin*) 	echo "removing preproccessor precompilition on macintosh os x" ; 
		CPPFLAGS="$CPPFLAGS -no-cpp-precomp" 
	   	AC_DEFINE(AMIDE_OSX_HACKS, 1, Define to compile with hacks for OS X)
		;;
esac



dnl Let people compile without debugging information
AC_ARG_ENABLE(
	amide_debug, 
	[  --enable-amide-debug	Compile with some debugging messages [default=yes]], 
	enable_amide_debug="$enableval", 
	enable_amide_debug=yes)

if test $enable_amide_debug = yes; then
	echo "Compiling with AMIDE debugging messages"
	AMIDE_DEBUG_CFLAGS="-ggdb"
	AC_SUBST(AMIDE_DEBUG_CFLAGS)
	AC_DEFINE(AMIDE_DEBUG, 1, Define to compile AMIDE with debugging information)
else
	echo "Compiling without AMIDE debugging messages"
fi


dnl let people compile without the GNU Scientific Library
AC_ARG_ENABLE(
	libgsl,
	[  --enable-libgsl	Compile with the GNU Scientific Library [default=yes]],
	enable_libgsl="$enableval",
	enable_libgsl=yes)

if (test $enable_libgsl = yes) && (test $FOUND_LIBGSL = yes); then
	echo "Compiling with GNU Scientific Library support"
	AC_DEFINE(AMIDE_LIBGSL_SUPPORT, 1, Define to compile with the GNU Scientific Library)
else
	echo "Compiling without the GNU Scientific Library"
fi


dnl Let people compile without having libecat (z_matrix_70)
AC_ARG_ENABLE(
	libecat, 
	[  --enable-libecat	Compile with the libecat/CTI library [default=yes]],
	enable_libecat="$enableval",
	enable_libecat=yes)

if (test $enable_libecat = yes) && (test $FOUND_LIBECAT = yes); then
	echo "Compiling with libecat/CTI file support"
	AMIDE_LIBECAT_LIBS="-lecat"
	AC_SUBST(AMIDE_LIBECAT_LIBS)
	AC_DEFINE(AMIDE_LIBECAT_SUPPORT, 1, Define to compile with libecat)
else
	echo "Compiling without libecat/CTI file support"
fi





dnl Let people compile without having libmdc
AC_ARG_ENABLE(
	libmdc, 
	[  --enable-libmdc	Compile with the xmedcon/libmdc library [default=yes]], 
	enable_libmdc="$enableval", 
	enable_libmdc=yes)

if (test $enable_libmdc = yes) && (test $FOUND_XMEDCON = yes); then
	echo "Compiling with xmedcon/libmdc file support"
	AC_DEFINE(AMIDE_LIBMDC_SUPPORT, 1, Define to compile with (X)MedCon)

	dnl redefine the xmedcon libs line, as otherwise we'll get errors from linking to glib1
	XMEDCON_LIBS="-L/usr/local/lib -lmdc"
	AC_SUBST(XMEDCON_LIBS)
else
	echo "Compiling without xmedcon/libmdc file support"
fi


dnl Let people compile without rendering/libvolpack
AC_ARG_ENABLE(
	libvolpack, 
	[  --enable-libvolpack	Compile with libvolpack rendering support [default=yes]], 
	enable_libvolpack="$enableval", 
	enable_libvolpack=yes)

if (test $enable_libvolpack = yes) && (test $FOUND_VOLPACK = yes); then
	echo "Compiling with libvolpack rendering support "
	AMIDE_LIBVOLPACK_LIBS="-lvolpack"
	AC_SUBST(AMIDE_LIBVOLPACK_LIBS)
	AC_DEFINE(AMIDE_LIBVOLPACK_SUPPORT, 1, Define to compile with VolPack)
else
	echo "Compiling without libvolpack rendering support"
fi


dnl Let people compile without mpeg movie generation/libfame
AC_ARG_ENABLE(
	libfame,
	[  --enable-libfame   	Compile with libfame mpeg encoding support [default=yes]], 
	enable_libfame="$enableval", 
	enable_libfame=yes)

if (test $enable_libfame = yes) && (test $FOUND_LIBFAME = yes); then
	echo "Compiling with libfame mpeg encoding support "
	AC_DEFINE(AMIDE_LIBFAME_SUPPORT, 1, Define to compile with Libfame)
else
	echo "Compiling without libfame mpeg encoding support"
fi

dnl Enable stripped down version for Windows
AC_ARG_ENABLE(
	mswin-hacks,
	[  --enable-mswin-hacks Enable hacks for compiling on windows [default=no]], 
	mswin_hacks="$enableval", 
	mswin_hacks=no)

if (test $mswin_hacks = yes); then
	echo "Enabling hacks to support MS Windows compilation"
	AC_DEFINE(AMIDE_WIN32_HACKS, 1, Define to compile with Win32 Hacks)
fi
AM_CONDITIONAL(AMIDE_WIN32_HACKS, test "$mswin_hacks" = yes)



AC_SUBST(EXTRA_GNOME_LIBS)
AC_SUBST(EXTRA_GNOME_CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_CONFIG_FILES([
Makefile
pixmaps/Makefile
win32/Makefile
help/Makefile
help/C/Makefile
help/es/Makefile
doc/Makefile
doc/reference/Makefile
doc/reference/version.xml
man/Makefile
omf-install/Makefile
src/Makefile
etc/Makefile
etc/amide-$VERSION-1.info:etc/amide.info.in
etc/amide-$VERSION-1.iss:etc/amide.iss.in
etc/amide.spec
po/Makefile.in])
AC_OUTPUT 

dnl Move the spec file so it won't get eaten by make distclean
echo "Moving SPEC file to base directory"
mv etc/amide.spec ./
