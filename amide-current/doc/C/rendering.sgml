<para> 

  Rendering in AMIDE is accomplished via the volpack rendering
  library.  The rendering performed is volume rendering, which is a
  more computationally expensive approach than the surface rendering
  abilities of most other packages.

</para>
<para>

  To start a rendering dialog, select the images that you would like
  to render, and then hit the "View->Analysis" menu item.  The program
  will reslice the data set into a data structure that the volpack
  library can handle, and then perform some initial rendering
  calculations which are used to speed up later renderings.  This
  whole process will take some time, so be patient.  Please also note
  that, when converting the data set, the data is scaled between 0 and
  1, with all data above the current maximum threshold set to 1, and
  all data below the current minimum threshold set to 0.

</para>
<para>

  When this is completed, the rendering dialog should pop-up.  It's
  use is described below.

</para>

<sect1><title>Rendering Dialog</title>

  <sect2><title>Axis Rendering</title>
    <para>
      A coordinate axis is always rendered along with the data set,
      and is displayed in a separate window on the upper left.  The
      x-axis is designated by the long bar with a ball at the end of
      it.  The y-axis is the second shorted bar.  And the shorted bar
      is the z-axis.
    </para>

    <para>
      The purpose of this rendering is two fold.  First, it allows the
      user to see in which direction the data set will be spun.
      Second, since the axis is rendered using the same classification
      functions as the data set, it allows a quick check that the data
      set is valid and is being rendered correctly.
    </para>
  </sect2>
  
    <sect2><title>"Render" Button</title>
    <para>
      This button tells the program to render the data set.  It will
      be inactive if the "render on change" option has been picked.
    </para>
  </sect2>
  
  <sect2><title>"Render on Change" Checkbox</title>
    <para>
      If this is checked, the data set will be rerendered on every
      change.  If this is not checked, the "Render" button will have
      to be hit to cause rerendering of the data set.
    </para>
  </sect2>
  
  <sect2><title>Spin Sliders</title>
    <para>
      Sliding one of these will cause the data set to be spun on the
      respective axis.  The effect is cumulative.  If you become
      confused as to where the axis lies that you're spinning on, look
      at the axis rendering.
    </para>
  </sect2>
  
  <sect2><title>"Rendering Parameters" Button</title>
    <para>
      This causes the rendering parameters dialog box to pop up.  This
      dialog box is described below.
    </para>
  </sect2>
  
  <sect2><title>Data Set Rendering Window</title>
    <para>
      In this window is shown the results of rendering the data set.
    </para>
  </sect2>
  
</sect1>

<sect1 id="rendering-dialog-help"><title>Rendering Parameters Dialog</title>

  <sect2 id="rendering-dialog-help-basic"><title>Basic Parameters</title>

    <sect3><title>Speed versus Quality</title>
      <para>
      With this drop-down menu, the user can choose between rendering
      speed and rendering quality.  To increase speed, voxels with
      values either close to zero or close to unity can be counted as
      completely translucent or completely opaque, respectively.  The
      highest quality doesn't use this approximation at all, the
      lowest quality setting uses this approximation big-time.
      </para>
    </sect3>

    <sect3><title>Return Type</title>
      <para>
	This setting determines whether the rendering returns an image
	which looks more analogous to an x-ray (the "opacity"
	setting), or returns an image which looks more like a surface
	(the "grayscale" setting).  The "grayscale" setting does this
	by specifying a light source, material properties, and using
	depth cueing.
      </para>
    </sect3>


  </sect2>

  <sect2 id="rendering-dialog-help-depth-cueing"><title>Depth Cueing</title>

    <para>
      These parameters are only used if the "grayscale" output type
      has been chosen.
    </para>

    <sect3><title>Enable/Disable Depth Cueing</title>
      <para>
	Specify whether or not we want depth cueing.  Depth cueing
	puts in a "fog" that causes more distant voxels to appear less
	bright.
      </para>
    </sect3>

    <sect3><title>Front Factor</title>
      <para>
	This is the transparency of the fog at the front of the
	volume.  If this number is greater than 1.0, voxels toward the
	front of the data set will be brightened.  If this parameter
	is less than 1.0, voxels toward the front of the data set will
	be darker, respectively.
      </para>
    </sect3>

    <sect3><title>Density</title>
      <para>
	This is how thick the "fog" is.  The thicker the fog, the
	darker distant objects seem.
      </para>
    </sect3>

  </sect2>
    

  <sect2 id="rendering-dialog-help-classification"><title>Classification</title>

    <para>
      This is the most confusing part of rendering, so hang on here.
      The classification functions are used to map between the value
      in each voxel and how much that voxel should be represented in
      the final rendered image.  On the x axis is the possible values
      of the different voxels.  On the y-axis is the opacity that will
      be given a voxel based on it's value.
    </para>
    
    <sect3><title>Classification Functions</title>
      <para>
	There are two classification functions:
      </para>

      <sect4><title>Density Dependent</title>
	<para>
	  This function tells you how opaque each voxel will be based
	  on it's current value.  In a sense, this is analogous to an
	  x-ray, where the amount of the x-rays that are absorbed in a
	  structure is related to the density of that structure.  If
	  you want the rendering to be determined entirely by the
	  gradient function, set this curve to a flat line on the top
	  of the display.
	</para>
      </sect4>

      <sect4><title>Gradient Dependent</title>
	<para>
	  Instead of relating the density of a voxel to its opacity,
	  this function relates the gradient of a voxel (how much the
	  value changes between this voxel and it's neighbors) to its
	  opacity.  This has the effect of giving added weight to
	  surfaces.  If you want the rendering to be determined
	  entirely by the density function, set this curve to a flat
	  line on the top of the display
	</para>
      </sect4>

    </sect3>

    <sect3><title>Apply Changes To:</title>
      <para>
	  This pull-down menu is useful when more than one data set is
	  being rendered.  It allows the user to set the
	  classification functions of each data set individually, or
	  apply classification function changes to all data sets at
	  the same time.
      </para>
    </sect3>

    <sect3><title>Buttons on the Right Side</title>
      <para>
	  Both classification functions have several buttons on the
	  right side of their graphs.  The top button allows the
	  classification function to be drawn as a spline.  The second
	  button allows the classification function to be drawn as a
	  series of straight lines.  The third button allows the
	  function to be hand-drawn.  Finally, the last button resets
	  the classification function to a straight line.
      </para>
    </sect3>

  </sect2>

</sect1>


  
  
  <!-- Keep this comment at the end of the file
  Local variables:
  mode: sgml
  sgml-omittag:t
  sgml-shorttag:t
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:nil
  sgml-exposed-tags:nil
  sgml-local-catalogs:nil
  sgml-local-ecat-files:nil
  End:
  -->            