<refentry id="amitk-amitk-common">
<refmeta>
<refentrytitle role="top_of_page">amitk_common</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AMITK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>amitk_common</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



#define             <link linkend="AMITK-RESPONSE-EXECUTE:CAPS">AMITK_RESPONSE_EXECUTE</link>
#define             <link linkend="AMITK-RESPONSE-COPY:CAPS">AMITK_RESPONSE_COPY</link>
#define             <link linkend="AMITK-RESPONSE-SAVE-AS:CAPS">AMITK_RESPONSE_SAVE_AS</link>
#define             <link linkend="AMITK-RESPONSE-SAVE-RAW-AS:CAPS">AMITK_RESPONSE_SAVE_RAW_AS</link>
#define             <link linkend="AMITK-UPDATE-DIVIDER:CAPS">AMITK_UPDATE_DIVIDER</link>
#define             <link linkend="AMITK-FILE-VERSION:CAPS">AMITK_FILE_VERSION</link>
#define             <link linkend="AMITK-FLAT-FILE-MAGIC-STRING:CAPS">AMITK_FLAT_FILE_MAGIC_STRING</link>
enum                <link linkend="AmitkLayout">AmitkLayout</link>;
enum                <link linkend="AmitkPanelLayout">AmitkPanelLayout</link>;
enum                <link linkend="AmitkViewMode">AmitkViewMode</link>;
enum                <link linkend="AmitkModality">AmitkModality</link>;
enum                <link linkend="AmitkLimit">AmitkLimit</link>;
enum                <link linkend="AmitkWindow">AmitkWindow</link>;
enum                <link linkend="AmitkThresholdStyle">AmitkThresholdStyle</link>;
enum                <link linkend="AmitkHelpInfo">AmitkHelpInfo</link>;
extern              PangoFontDescription * <link linkend="amitk-fixed-font-desc">amitk_fixed_font_desc</link>;
extern              GConfClient * <link linkend="gconf-client">gconf_client</link>;
<link linkend="void">void</link>                <link linkend="amitk-common-font-init">amitk_common_font_init</link>              (void);
<link linkend="void">void</link>                <link linkend="amitk-append-str-with-newline">amitk_append_str_with_newline</link>       (<link linkend="gchar">gchar</link> **pstr,
                                                         const <link linkend="gchar">gchar</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="amitk-append-str">amitk_append_str</link>                    (<link linkend="gchar">gchar</link> **pstr,
                                                         const <link linkend="gchar">gchar</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="amitk-real-cell-data-func">amitk_real_cell_data_func</link>           (<link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *tree_column,
                                                         <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                                         <link linkend="GtkTreeModel">GtkTreeModel</link> *tree_model,
                                                         <link linkend="GtkTreeIter">GtkTreeIter</link> *iter,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="gint">gint</link>                <link linkend="amitk-spin-button-scientific-output">amitk_spin_button_scientific_output</link> (<link linkend="GtkSpinButton">GtkSpinButton</link> *spin_button,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="GdkPixbuf">GdkPixbuf</link>*          <link linkend="amitk-get-pixbuf-from-canvas">amitk_get_pixbuf_from_canvas</link>        (<link linkend="GnomeCanvas">GnomeCanvas</link> *canvas,
                                                         <link linkend="gint">gint</link> xoffset,
                                                         <link linkend="gint">gint</link> yoffset,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="gboolean">gboolean</link>            <link linkend="amitk-gconf-has-value">amitk_gconf_has_value</link>               (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key);
<link linkend="gint">gint</link>                <link linkend="amitk-gconf-get-int-with-default">amitk_gconf_get_int_with_default</link>    (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gint">gint</link> default_int);
<link linkend="gdouble">gdouble</link>             <link linkend="amitk-gconf-get-float-with-default">amitk_gconf_get_float_with_default</link>  (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gdouble">gdouble</link> default_float);
<link linkend="gboolean">gboolean</link>            <link linkend="amitk-gconf-get-bool-with-default">amitk_gconf_get_bool_with_default</link>   (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gboolean">gboolean</link> default_bool);
<link linkend="gchar">gchar</link>*              <link linkend="amitk-gconf-get-string-with-default">amitk_gconf_get_string_with_default</link> (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *default_str);
<link linkend="gboolean">gboolean</link>            <link linkend="amitk-is-xif-directory">amitk_is_xif_directory</link>              (const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="gboolean">gboolean</link> *plegacy,
                                                         <link linkend="gchar">gchar</link> **pxml_filename);
<link linkend="gboolean">gboolean</link>            <link linkend="amitk-is-xif-flat-file">amitk_is_xif_flat_file</link>              (const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="guint64">guint64</link> *plocation_le,
                                                         <link linkend="guint64">guint64</link> *psize_le);
const <link linkend="gchar">gchar</link>*        <link linkend="amitk-layout-get-name">amitk_layout_get_name</link>               (const <link linkend="AmitkLayout">AmitkLayout</link> layout);
const <link linkend="gchar">gchar</link>*        <link linkend="amitk-panel-layout-get-name">amitk_panel_layout_get_name</link>         (const <link linkend="AmitkPanelLayout">AmitkPanelLayout</link> panel_layout);
const <link linkend="gchar">gchar</link>*        <link linkend="amitk-limit-get-name">amitk_limit_get_name</link>                (const <link linkend="AmitkLimit">AmitkLimit</link> limit);
const <link linkend="gchar">gchar</link>*        <link linkend="amitk-window-get-name">amitk_window_get_name</link>               (const <link linkend="AmitkWindow">AmitkWindow</link> window);
const <link linkend="gchar">gchar</link>*        <link linkend="amitk-modality-get-name">amitk_modality_get_name</link>             (const <link linkend="AmitkModality">AmitkModality</link> modality);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="AMITK-RESPONSE-EXECUTE:CAPS" role="macro"/>AMITK_RESPONSE_EXECUTE</title>
<indexterm><primary>AMITK_RESPONSE_EXECUTE</primary></indexterm><programlisting>#define AMITK_RESPONSE_EXECUTE 1
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-RESPONSE-COPY:CAPS" role="macro"/>AMITK_RESPONSE_COPY</title>
<indexterm><primary>AMITK_RESPONSE_COPY</primary></indexterm><programlisting>#define AMITK_RESPONSE_COPY 2
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-RESPONSE-SAVE-AS:CAPS" role="macro"/>AMITK_RESPONSE_SAVE_AS</title>
<indexterm><primary>AMITK_RESPONSE_SAVE_AS</primary></indexterm><programlisting>#define AMITK_RESPONSE_SAVE_AS 3
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-RESPONSE-SAVE-RAW-AS:CAPS" role="macro"/>AMITK_RESPONSE_SAVE_RAW_AS</title>
<indexterm><primary>AMITK_RESPONSE_SAVE_RAW_AS</primary></indexterm><programlisting>#define AMITK_RESPONSE_SAVE_RAW_AS 4
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-UPDATE-DIVIDER:CAPS" role="macro"/>AMITK_UPDATE_DIVIDER</title>
<indexterm><primary>AMITK_UPDATE_DIVIDER</primary></indexterm><programlisting>#define AMITK_UPDATE_DIVIDER 40.0 /* must be float point */
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-FILE-VERSION:CAPS" role="macro"/>AMITK_FILE_VERSION</title>
<indexterm><primary>AMITK_FILE_VERSION</primary></indexterm><programlisting>#define AMITK_FILE_VERSION (xmlChar *) "2.0"
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AMITK-FLAT-FILE-MAGIC-STRING:CAPS" role="macro"/>AMITK_FLAT_FILE_MAGIC_STRING</title>
<indexterm><primary>AMITK_FLAT_FILE_MAGIC_STRING</primary></indexterm><programlisting>#define AMITK_FLAT_FILE_MAGIC_STRING "AMIDE XML Image Format Flat File"
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkLayout" role="enum"/>enum AmitkLayout</title>
<indexterm><primary>AmitkLayout</primary></indexterm><programlisting>typedef enum {
  AMITK_LAYOUT_LINEAR, 
  AMITK_LAYOUT_ORTHOGONAL,
  AMITK_LAYOUT_NUM
} AmitkLayout;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkPanelLayout" role="enum"/>enum AmitkPanelLayout</title>
<indexterm><primary>AmitkPanelLayout</primary></indexterm><programlisting>typedef enum {
  AMITK_PANEL_LAYOUT_MIXED,
  AMITK_PANEL_LAYOUT_LINEAR_X,
  AMITK_PANEL_LAYOUT_LINEAR_Y,
  AMITK_PANEL_LAYOUT_NUM
} AmitkPanelLayout;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkViewMode" role="enum"/>enum AmitkViewMode</title>
<indexterm><primary>AmitkViewMode</primary></indexterm><programlisting>typedef enum {
  AMITK_VIEW_MODE_SINGLE,
  AMITK_VIEW_MODE_LINKED_2WAY,
  AMITK_VIEW_MODE_LINKED_3WAY,
  AMITK_VIEW_MODE_NUM
} AmitkViewMode;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkModality" role="enum"/>enum AmitkModality</title>
<indexterm><primary>AmitkModality</primary></indexterm><programlisting>typedef enum {
  AMITK_MODALITY_PET, 
  AMITK_MODALITY_SPECT, 
  AMITK_MODALITY_CT, 
  AMITK_MODALITY_MRI, 
  AMITK_MODALITY_OTHER, 
  AMITK_MODALITY_NUM
} AmitkModality;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkLimit" role="enum"/>enum AmitkLimit</title>
<indexterm><primary>AmitkLimit</primary></indexterm><programlisting>typedef enum {
  AMITK_LIMIT_MIN,
  AMITK_LIMIT_MAX,
  AMITK_LIMIT_NUM
} AmitkLimit;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkWindow" role="enum"/>enum AmitkWindow</title>
<indexterm><primary>AmitkWindow</primary></indexterm><programlisting>typedef enum {
  AMITK_WINDOW_ABDOMEN,
  AMITK_WINDOW_BRAIN,
  AMITK_WINDOW_EXTREMITIES,
  AMITK_WINDOW_LIVER,
  AMITK_WINDOW_LUNG,
  AMITK_WINDOW_PELVIS_SOFT_TISSUE,
  AMITK_WINDOW_SKULL_BASE,
  AMITK_WINDOW_SPINE_A,
  AMITK_WINDOW_SPINE_B,
  AMITK_WINDOW_THORAX_SOFT_TISSUE,
  AMITK_WINDOW_NUM
} AmitkWindow;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkThresholdStyle" role="enum"/>enum AmitkThresholdStyle</title>
<indexterm><primary>AmitkThresholdStyle</primary></indexterm><programlisting>typedef enum {
  AMITK_THRESHOLD_STYLE_MIN_MAX,
  AMITK_THRESHOLD_STYLE_CENTER_WIDTH,
  AMITK_THRESHOLD_STYLE_NUM
} AmitkThresholdStyle;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="AmitkHelpInfo" role="enum"/>enum AmitkHelpInfo</title>
<indexterm><primary>AmitkHelpInfo</primary></indexterm><programlisting>typedef enum {
  AMITK_HELP_INFO_BLANK,
  AMITK_HELP_INFO_CANVAS_DATA_SET,
  AMITK_HELP_INFO_CANVAS_ROI,
  AMITK_HELP_INFO_CANVAS_FIDUCIAL_MARK,
  AMITK_HELP_INFO_CANVAS_STUDY,
  AMITK_HELP_INFO_CANVAS_ISOCONTOUR_ROI,
  AMITK_HELP_INFO_CANVAS_FREEHAND_ROI,
  AMITK_HELP_INFO_CANVAS_DRAWING_MODE,
  AMITK_HELP_INFO_CANVAS_LINE_PROFILE,
  AMITK_HELP_INFO_CANVAS_NEW_ROI,
  AMITK_HELP_INFO_CANVAS_NEW_ISOCONTOUR_ROI,
  AMITK_HELP_INFO_CANVAS_NEW_FREEHAND_ROI,
  AMITK_HELP_INFO_CANVAS_CHANGE_ISOCONTOUR,
  AMITK_HELP_INFO_CANVAS_SHIFT_OBJECT,
  AMITK_HELP_INFO_CANVAS_ROTATE_OBJECT,
  AMITK_HELP_INFO_TREE_VIEW_DATA_SET,
  AMITK_HELP_INFO_TREE_VIEW_ROI,
  AMITK_HELP_INFO_TREE_VIEW_FIDUCIAL_MARK,
  AMITK_HELP_INFO_TREE_VIEW_STUDY,
  AMITK_HELP_INFO_TREE_VIEW_NONE,
  AMITK_HELP_INFO_UPDATE_LOCATION,
  AMITK_HELP_INFO_UPDATE_THETA,
  AMITK_HELP_INFO_UPDATE_SHIFT,
  AMITK_HELP_INFO_NUM
} AmitkHelpInfo;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="amitk-fixed-font-desc" role="variable"/>amitk_fixed_font_desc</title>
<indexterm><primary>amitk_fixed_font_desc</primary></indexterm><programlisting>extern PangoFontDescription * amitk_fixed_font_desc;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gconf-client" role="variable"/>gconf_client</title>
<indexterm><primary>gconf_client</primary></indexterm><programlisting>extern GConfClient * gconf_client;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="amitk-common-font-init" role="function"/>amitk_common_font_init ()</title>
<indexterm><primary>amitk_common_font_init</primary></indexterm><programlisting><link linkend="void">void</link>                amitk_common_font_init              (void);</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="amitk-append-str-with-newline" role="function"/>amitk_append_str_with_newline ()</title>
<indexterm><primary>amitk_append_str_with_newline</primary></indexterm><programlisting><link linkend="void">void</link>                amitk_append_str_with_newline       (<link linkend="gchar">gchar</link> **pstr,
                                                         const <link linkend="gchar">gchar</link> *format,
                                                         ...);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-append-str" role="function"/>amitk_append_str ()</title>
<indexterm><primary>amitk_append_str</primary></indexterm><programlisting><link linkend="void">void</link>                amitk_append_str                    (<link linkend="gchar">gchar</link> **pstr,
                                                         const <link linkend="gchar">gchar</link> *format,
                                                         ...);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-real-cell-data-func" role="function"/>amitk_real_cell_data_func ()</title>
<indexterm><primary>amitk_real_cell_data_func</primary></indexterm><programlisting><link linkend="void">void</link>                amitk_real_cell_data_func           (<link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *tree_column,
                                                         <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                                         <link linkend="GtkTreeModel">GtkTreeModel</link> *tree_model,
                                                         <link linkend="GtkTreeIter">GtkTreeIter</link> *iter,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_column</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-spin-button-scientific-output" role="function"/>amitk_spin_button_scientific_output ()</title>
<indexterm><primary>amitk_spin_button_scientific_output</primary></indexterm><programlisting><link linkend="gint">gint</link>                amitk_spin_button_scientific_output (<link linkend="GtkSpinButton">GtkSpinButton</link> *spin_button,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>spin_button</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-get-pixbuf-from-canvas" role="function"/>amitk_get_pixbuf_from_canvas ()</title>
<indexterm><primary>amitk_get_pixbuf_from_canvas</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*          amitk_get_pixbuf_from_canvas        (<link linkend="GnomeCanvas">GnomeCanvas</link> *canvas,
                                                         <link linkend="gint">gint</link> xoffset,
                                                         <link linkend="gint">gint</link> yoffset,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xoffset</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>yoffset</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-gconf-has-value" role="function"/>amitk_gconf_has_value ()</title>
<indexterm><primary>amitk_gconf_has_value</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            amitk_gconf_has_value               (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-gconf-get-int-with-default" role="function"/>amitk_gconf_get_int_with_default ()</title>
<indexterm><primary>amitk_gconf_get_int_with_default</primary></indexterm><programlisting><link linkend="gint">gint</link>                amitk_gconf_get_int_with_default    (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gint">gint</link> default_int);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_int</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-gconf-get-float-with-default" role="function"/>amitk_gconf_get_float_with_default ()</title>
<indexterm><primary>amitk_gconf_get_float_with_default</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             amitk_gconf_get_float_with_default  (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gdouble">gdouble</link> default_float);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_float</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-gconf-get-bool-with-default" role="function"/>amitk_gconf_get_bool_with_default ()</title>
<indexterm><primary>amitk_gconf_get_bool_with_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            amitk_gconf_get_bool_with_default   (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gboolean">gboolean</link> default_bool);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_bool</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-gconf-get-string-with-default" role="function"/>amitk_gconf_get_string_with_default ()</title>
<indexterm><primary>amitk_gconf_get_string_with_default</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              amitk_gconf_get_string_with_default (<link linkend="GConfClient">GConfClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *default_str);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_str</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-is-xif-directory" role="function"/>amitk_is_xif_directory ()</title>
<indexterm><primary>amitk_is_xif_directory</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            amitk_is_xif_directory              (const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="gboolean">gboolean</link> *plegacy,
                                                         <link linkend="gchar">gchar</link> **pxml_filename);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plegacy</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pxml_filename</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-is-xif-flat-file" role="function"/>amitk_is_xif_flat_file ()</title>
<indexterm><primary>amitk_is_xif_flat_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            amitk_is_xif_flat_file              (const <link linkend="gchar">gchar</link> *filename,
                                                         <link linkend="guint64">guint64</link> *plocation_le,
                                                         <link linkend="guint64">guint64</link> *psize_le);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plocation_le</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>psize_le</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-layout-get-name" role="function"/>amitk_layout_get_name ()</title>
<indexterm><primary>amitk_layout_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        amitk_layout_get_name               (const <link linkend="AmitkLayout">AmitkLayout</link> layout);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>layout</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-panel-layout-get-name" role="function"/>amitk_panel_layout_get_name ()</title>
<indexterm><primary>amitk_panel_layout_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        amitk_panel_layout_get_name         (const <link linkend="AmitkPanelLayout">AmitkPanelLayout</link> panel_layout);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>panel_layout</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-limit-get-name" role="function"/>amitk_limit_get_name ()</title>
<indexterm><primary>amitk_limit_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        amitk_limit_get_name                (const <link linkend="AmitkLimit">AmitkLimit</link> limit);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>limit</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-window-get-name" role="function"/>amitk_window_get_name ()</title>
<indexterm><primary>amitk_window_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        amitk_window_get_name               (const <link linkend="AmitkWindow">AmitkWindow</link> window);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="amitk-modality-get-name" role="function"/>amitk_modality_get_name ()</title>
<indexterm><primary>amitk_modality_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        amitk_modality_get_name             (const <link linkend="AmitkModality">AmitkModality</link> modality);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>modality</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
