ui_rendering.c:  //  requisition.width = ui_study->rgb_image[view]->rgb_width;
ui_rendering.c:  //  requisition.height = ui_study->rgb_image[view]->rgb_height;
ui_rendering.c:  //  gtk_widget_size_request(GTK_WIDGET(ui_study->canvas[view]), &requisition);
ui_roi_dialog.c:  ui_roi_list_item = ui_roi_list_get_ui_roi(ui_study->current_rois, roi);
ui_roi_dialog_cb.c:			   realspace_get_view_normal(study_coord_frame_axis(ui_study->study), i_view),
ui_study.c:  g_return_val_if_fail(ui_study->reference_count > 0, NULL);
ui_study.c:  ui_study->reference_count--;
ui_study.c:  ui_study->current_rois = ui_roi_list_free(ui_study->current_rois);
ui_study.c:  ui_study->current_volumes = ui_volume_list_free(ui_study->current_volumes);
ui_study.c:  ui_study->study = study_free(ui_study->study);
ui_study.c:  if (ui_study->reference_count == 0) {
ui_study.c:  ui_study->reference_count = 1;
ui_study.c:  ui_study->study = NULL;
ui_study.c:  ui_study->current_mode = VOLUME_MODE;
ui_study.c:  ui_study->current_volume = NULL;
ui_study.c:  ui_study->current_roi = NULL;
ui_study.c:  ui_study->current_volumes = NULL;
ui_study.c:  ui_study->current_rois = NULL;
ui_study.c:  ui_study->default_roi_grain =  GRAINS_1;
ui_study.c:  ui_study->threshold_dialog = NULL;
ui_study.c:  ui_study->study_dialog = NULL;
ui_study.c:  ui_study->study_selected = FALSE;
ui_study.c:  ui_study->time_dialog = NULL;
ui_study.c:  ui_study->thickness_adjustment = NULL;
ui_study.c:  ui_study->thickness_spin_button = NULL;
ui_study.c:    study_add_volume(ui_study->study, import_volume);
ui_study.c:    if (study_view_center(ui_study->study).x < 0.0) {
ui_study.c:      study_set_view_center(ui_study->study, volume_calculate_center(import_volume));
ui_study.c:  current_slices = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "slices");
ui_study.c:  canvas_coord_frame_p = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "coord_frame");
ui_study.c:  far_corner = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "far_corner");
ui_study.c:  *canvas_coord_frame_p = realspace_get_view_coord_frame(study_coord_frame(ui_study->study), view);
ui_study.c:    button[HELP_INFO_LINE_1] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_1_info");
ui_study.c:    button[HELP_INFO_LINE_1_SHIFT] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_1s_info");
ui_study.c:    button[HELP_INFO_LINE_2] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_2_info");
ui_study.c:    button[HELP_INFO_LINE_2_SHIFT] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_2s_info");
ui_study.c:    button[HELP_INFO_LINE_3] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_3_info");
ui_study.c:    button[HELP_INFO_LINE_3_SHIFT] = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "button_3s_info");
ui_study.c:	button[i_line] = gnome_canvas_item_new(gnome_canvas_root(ui_study->help_info),
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_1_info", button[HELP_INFO_LINE_1]);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_1s_info", button[HELP_INFO_LINE_1_SHIFT]);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_2_info", button[HELP_INFO_LINE_2]);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_2s_info", button[HELP_INFO_LINE_2_SHIFT]);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_3_info", button[HELP_INFO_LINE_3]);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_3s_info", button[HELP_INFO_LINE_3_SHIFT]);
ui_study.c:    location_p = realspace_alt_coord_to_base(study_view_center(ui_study->study),
ui_study.c:					     study_coord_frame(ui_study->study));
ui_study.c:  location = gtk_object_get_data(GTK_OBJECT(ui_study->help_info), "location");
ui_study.c:    location = gnome_canvas_item_new(gnome_canvas_root(ui_study->help_info),
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "location", location);
ui_study.c:      target_lines = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[i_view]), "target_lines");
ui_study.c:      gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "target_lines", NULL);
ui_study.c:    canvas_coord_frame = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[i_view]), "coord_frame");
ui_study.c:    rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[i_view]), "rgb_image");
ui_study.c:      gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "target_lines", target_lines);
ui_study.c:      target_lines = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[i_view]), "target_lines");
ui_study.c:    start = realspace_alt_coord_to_alt(center, study_coord_frame(ui_study->study),*canvas_coord_frame);
ui_study.c:    start.x -= study_view_thickness(ui_study->study)/2.0;
ui_study.c:    start.y -= study_view_thickness(ui_study->study)/2.0;
ui_study.c:    end = realspace_alt_coord_to_alt(center, study_coord_frame(ui_study->study),*canvas_coord_frame);
ui_study.c:    end.x += study_view_thickness(ui_study->study)/2.0;
ui_study.c:    end.y += study_view_thickness(ui_study->study)/2.0;
ui_study.c:    point0 = ui_study_rp_2_cp(ui_study->canvas[i_view], start);
ui_study.c:    point1 = ui_study_rp_2_cp(ui_study->canvas[i_view], end);
ui_study.c:	gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[i_view]), gnome_canvas_line_get_type(),
ui_study.c:	gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[i_view]), gnome_canvas_line_get_type(),
ui_study.c:	gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[i_view]), gnome_canvas_line_get_type(),
ui_study.c:	gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[i_view]), gnome_canvas_line_get_type(),
ui_study.c:  adjustment = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "plane_adjustment");
ui_study.c:  if (ui_study->current_volumes == NULL) {   /* junk values */
ui_study.c:      realspace_get_view_coord_frame(study_coord_frame(ui_study->study), view);
ui_study.c:    ui_volume_list_get_view_corners(ui_study->current_volumes, view_coord_frame, view_corner);
ui_study.c:    min_voxel_size = ui_volume_list_max_min_voxel_size(ui_study->current_volumes);
ui_study.c:    view_center = study_view_center(ui_study->study);
ui_study.c:					  study_coord_frame(ui_study->study),
ui_study.c:      if (zp_start.z < lower-study_view_thickness(ui_study->study))
ui_study.c:					       study_coord_frame(ui_study->study));
ui_study.c:      study_set_view_center(ui_study->study, view_center); /* save the updated view coords */
ui_study.c:      if (zp_start.z > lower+study_view_thickness(ui_study->study))
ui_study.c:					       study_coord_frame(ui_study->study));
ui_study.c:      study_set_view_center(ui_study->study, view_center); /* save the updated view coords */
ui_study.c:				    study_view_thickness(ui_study->study));
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "plane_adjustment", adjustment); 
ui_study.c:    GTK_ADJUSTMENT(adjustment)->page_size = study_view_thickness(ui_study->study);
ui_study.c:  if (study_volumes(ui_study->study) == NULL)
ui_study.c:  if (ui_study->thickness_adjustment == NULL)
ui_study.c:  gtk_signal_handler_block_by_func(ui_study->thickness_adjustment,
ui_study.c:  min_voxel_size = volumes_min_voxel_size(study_volumes(ui_study->study));
ui_study.c:  max_size = volumes_max_size(study_volumes(ui_study->study));
ui_study.c:  if (study_view_thickness(ui_study->study) < min_voxel_size)
ui_study.c:    study_view_thickness(ui_study->study) = min_voxel_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->upper = max_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->lower = min_voxel_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->page_size = min_voxel_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->step_increment = min_voxel_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->page_increment = min_voxel_size;
ui_study.c:  GTK_ADJUSTMENT(ui_study->thickness_adjustment)->value = study_view_thickness(ui_study->study);
ui_study.c:  gtk_adjustment_changed(GTK_ADJUSTMENT(ui_study->thickness_adjustment));
ui_study.c:  gtk_spin_button_set_value(GTK_SPIN_BUTTON(ui_study->thickness_spin_button),
ui_study.c:			    study_view_thickness(ui_study->study));   
ui_study.c:  gtk_spin_button_configure(GTK_SPIN_BUTTON(ui_study->thickness_spin_button),
ui_study.c:			    GTK_ADJUSTMENT(ui_study->thickness_adjustment),
ui_study.c:			    study_view_thickness(ui_study->study),
ui_study.c:  gtk_signal_handler_unblock_by_func(ui_study->thickness_adjustment, 
ui_study.c:  canvas_arrow[0] = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow0");
ui_study.c:  canvas_arrow[1] = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow1");
ui_study.c:  canvas_arrow[2] = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow2");
ui_study.c:  canvas_arrow[3] = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow3");
ui_study.c:  if ((study_volumes(ui_study->study) == NULL) || (ui_study->current_volumes == NULL)) {
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow0", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow1", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow2", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow3", NULL);
ui_study.c:  canvas_coord_frame = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "coord_frame");
ui_study.c:  view_center = study_view_center(ui_study->study);
ui_study.c:  start = realspace_alt_coord_to_alt(view_center, study_coord_frame(ui_study->study),*canvas_coord_frame);
ui_study.c:  start.x -= study_view_thickness(ui_study->study)/2.0;
ui_study.c:  start.y -= study_view_thickness(ui_study->study)/2.0;
ui_study.c:  end = realspace_alt_coord_to_alt(view_center, study_coord_frame(ui_study->study),*canvas_coord_frame);
ui_study.c:  end.x += study_view_thickness(ui_study->study)/2.0;
ui_study.c:  end.y += study_view_thickness(ui_study->study)/2.0;
ui_study.c:  point0 = ui_study_rp_2_cp(ui_study->canvas[view], start);
ui_study.c:  point1 = ui_study_rp_2_cp(ui_study->canvas[view], end);
ui_study.c:  rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "rgb_image");
ui_study.c:      gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow0", canvas_arrow[0]);
ui_study.c:      gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow1", canvas_arrow[1]);
ui_study.c:      gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow2", canvas_arrow[2]);
ui_study.c:      gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_arrow3", canvas_arrow[3]);
ui_study.c:  canvas_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_image");
ui_study.c:  rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "rgb_image");
ui_study.c:  if (ui_study->current_volumes == NULL) {
ui_study.c:    widget_style = gtk_widget_get_style(GTK_WIDGET(ui_study->canvas[view]));
ui_study.c:    temp_p.x = temp_p.y = temp_p.z = 0.5*study_view_thickness(ui_study->study);
ui_study.c:    temp_p = rp_sub(study_view_center(ui_study->study), temp_p);
ui_study.c:    view_coord_frame = study_coord_frame(ui_study->study);
ui_study.c:    temp_volumes = ui_volume_list_return_volume_list(ui_study->current_volumes);
ui_study.c:    current_slices = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "slices");
ui_study.c:				   study_view_time(ui_study->study),
ui_study.c:				   study_view_duration(ui_study->study),
ui_study.c:				   study_view_thickness(ui_study->study),
ui_study.c:				   study_scaling(ui_study->study),
ui_study.c:				   study_zoom(ui_study->study),
ui_study.c:				   study_interpolation(ui_study->study));
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "slices", current_slices);
ui_study.c:    gtk_widget_set_usize(GTK_WIDGET(ui_study->canvas[view]), 
ui_study.c:    gnome_canvas_set_scroll_region(ui_study->canvas[view], 0.0, 0.0, 
ui_study.c:      gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "canvas_image", canvas_image);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->canvas[view]), "rgb_image", rgb_image);
ui_study.c:  current_slices = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "slices");
ui_study.c:  rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "rgb_image");
ui_study.c:  if (ui_study->current_volume == NULL) {
ui_study.c:    if (ui_study->current_volumes == NULL)
ui_study.c:      volume = ui_study->current_volumes->volume; /* just grab the first one */
ui_study.c:    volume = ui_study->current_volume;
ui_study.c:  if ((ui_study->current_roi == roi) && (ui_study->current_mode == ROI_MODE))
ui_study.c:    roi_cp = ui_study_rp_2_cp(ui_study->canvas[view], *((realpoint_t *) temp->data));
ui_study.c:    item =  gnome_canvas_item_new(gnome_canvas_root(ui_study->canvas[view]),
ui_study.c:  ui_roi_list_t * temp_roi_list=ui_study->current_rois;
ui_study.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[i_view]));
ui_study.c:  temp_center = realspace_alt_coord_to_base(study_view_center(ui_study->study),
ui_study.c:  					    study_coord_frame(ui_study->study));
ui_study.c:  if (study_volumes(ui_study->study) != NULL) {
ui_study.c:    volumes_get_view_corners(study_volumes(ui_study->study), 
ui_study.c:			     study_coord_frame(ui_study->study), view_corner);
ui_study.c:    study_set_coord_frame_offset(ui_study->study, view_corner[0]);
ui_study.c:    study_set_view_center(ui_study->study, 
ui_study.c:			  realspace_base_coord_to_alt(temp_center, study_coord_frame(ui_study->study)));
ui_study.c:      current_slices = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[k_view]), "slices");
ui_study.c:      gtk_object_set_data(GTK_OBJECT(ui_study->canvas[k_view]), "slices", current_slices);
ui_study.c:      current_slices = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[k_view]), "slices");
ui_study.c:      gtk_object_set_data(GTK_OBJECT(ui_study->canvas[k_view]), "slices", current_slices);
ui_study.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[i_view]));
ui_study.c:  prev_active_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "active_row");
ui_study.c:  } else if (ui_study->current_volume != NULL) {
ui_study.c:    ui_volume_item = ui_volume_list_get_ui_volume(ui_study->current_volumes, ui_study->current_volume);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->tree), "active_row", leaf);
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),NULL,NULL,ROI_xpm);
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),NULL,NULL,ROI_xpm);
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),NULL,NULL,ROI_xpm);
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),NULL,NULL,ROI_xpm);
ui_study.c:  study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_study.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_study.c:  study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study.c:  leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study.c:  icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree), NULL,NULL,study_xpm);
ui_study.c:  label = gtk_label_new(study_name(ui_study->study));
ui_study.c:  gtk_tree_append(GTK_TREE(ui_study->tree), leaf);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->tree), "study_leaf", leaf); /* save a pointer to it */
ui_study.c:  if (study_volumes(ui_study->study) != NULL) {
ui_study.c:    volume_list = study_volumes(ui_study->study);
ui_study.c:  if (study_rois(ui_study->study)!= NULL) {
ui_study.c:    roi_list = study_rois(ui_study->study);
ui_study.c:  if (GNOME_IS_APP(ui_study->app))
ui_study.c:    gnome_app_set_contents(GNOME_APP(ui_study->app), main_table);
ui_study.c:    gtk_container_add(GTK_CONTAINER(ui_study->app), main_table);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->app), "which_help", GINT_TO_POINTER(HELP_INFO_BLANK));
ui_study.c:  gtk_signal_connect(GTK_OBJECT(ui_study->app), "enter_notify_event",
ui_study.c:  ui_study->tree = tree;
ui_study.c:  ui_study->help_info = GNOME_CANVAS(gnome_canvas_new());
ui_study.c:  gtk_table_attach(GTK_TABLE(left_table), GTK_WIDGET(ui_study->help_info), 
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_1_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_1s_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_2_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_2s_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_3_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "button_3s_info", NULL);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->help_info), "location", NULL);
ui_study.c:  gtk_widget_set_usize(GTK_WIDGET(ui_study->help_info), 150,
ui_study.c:  gnome_canvas_set_scroll_region(ui_study->help_info, 0.0, 0.0, 150.0, 
ui_study.c:    //ui_study->canvas[i_view] = GNOME_CANVAS(gnome_canvas_new_aa());
ui_study.c:    ui_study->canvas[i_view] = GNOME_CANVAS(gnome_canvas_new());
ui_study.c:		     GTK_WIDGET(ui_study->canvas[i_view]), 
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "target_lines", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "far_corner", far_corner);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "coord_frame", canvas_coord_frame);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "slices", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "canvas_image", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "rgb_image", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "canvas_arrow0", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "canvas_arrow1", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "canvas_arrow2", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "canvas_arrow3", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "plane_adjustment", NULL);
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "view", GINT_TO_POINTER(i_view));
ui_study.c:    gtk_signal_connect(GTK_OBJECT(ui_study->canvas[i_view]), "event",
ui_study.c:    gtk_object_set_data(GTK_OBJECT(ui_study->canvas[i_view]), "which_help", 
ui_study.c:    gtk_signal_connect(GTK_OBJECT(ui_study->canvas[i_view]), "enter_notify_event",
ui_study.c:    gtk_signal_connect(GTK_OBJECT(ui_study->canvas[i_view]), "button_press_event",
ui_study.c:    ui_study->study = study_init();
ui_study.c:    study_set_name(ui_study->study, temp_string);
ui_study.c:    title = g_strdup_printf("Study: %s",study_name(ui_study->study));
ui_study.c:    ui_study->study = study;
ui_study.c:    title = g_strdup_printf("Study: %s",study_name(ui_study->study));
ui_study.c:    ui_study->app=gnome_app_new(PACKAGE, title);
ui_study.c:    ui_study->app=gtk_frame_new(NULL);
ui_study.c:    gtk_frame_set_shadow_type(GTK_FRAME(ui_study->app), GTK_SHADOW_NONE);
ui_study.c:    gtk_container_add(GTK_CONTAINER(parent_bin), ui_study->app);
ui_study.c:  gtk_object_set_data(GTK_OBJECT(ui_study->app), "ui_study", ui_study);
ui_study.c:  gtk_signal_connect(GTK_OBJECT(ui_study->app), "delete_event",
ui_study.c:  if (GNOME_IS_APP(ui_study->app))
ui_study.c:  if (GNOME_IS_APP(ui_study->app))
ui_study.c:  gtk_widget_show_all(ui_study->app);
ui_study.c:  return ui_study->app;
ui_study_cb.c:    if (GNOME_IS_APP(ui_study->app))
ui_study_cb.c:						      GTK_WINDOW(ui_study->app));
ui_study_cb.c:  if (study_write_xml(ui_study->study, save_filename) == FALSE) {
ui_study_cb.c:  if (study_filename(ui_study->study) == NULL) 
ui_study_cb.c:    temp_string = g_strdup_printf("%s.xif", study_name(ui_study->study));
ui_study_cb.c:    temp_string = g_strdup_printf("%s", study_filename(ui_study->study));
ui_study_cb.c:				 (GNOME_IS_APP(ui_study->app) ? 
ui_study_cb.c:				  GTK_WINDOW(ui_study->app) : NULL));
ui_study_cb.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:    if (GNOME_IS_APP(ui_study->app))
ui_study_cb.c:						      GTK_WINDOW(ui_study->app));
ui_study_cb.c:  rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "rgb_image");
ui_study_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_cb.c:  if (ui_study->current_volume == NULL)
ui_study_cb.c:  if (ui_study->current_volumes == NULL)
ui_study_cb.c:  canvas_coord_frame = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view]), "coord_frame");
ui_study_cb.c:  view_center = study_view_center(ui_study->study);
ui_study_cb.c:				      study_coord_frame(ui_study->study),
ui_study_cb.c:  upper = temp_p.z + study_view_thickness(ui_study->study)/2.0;
ui_study_cb.c:  lower = temp_p.z - study_view_thickness(ui_study->study)/2.0;
ui_study_cb.c:  current_volumes = ui_study->current_volumes;
ui_study_cb.c:				study_name(ui_study->study),
ui_study_cb.c:    if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:      if (roi_undrawn(ui_study->current_roi))
ui_study_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_cb.c:  if (ui_study->current_volume == NULL)
ui_study_cb.c:  if (ui_study->current_mode == ROI_MODE)
ui_study_cb.c:    if (ui_study->current_roi == NULL)
ui_study_cb.c:      ui_study->current_mode = VOLUME_MODE; /* switch back to volume mode */
ui_study_cb.c:  canvas_rp = ui_study_cp_2_rp(canvas, canvas_cp, study_view_thickness(ui_study->study));
ui_study_cb.c:  view_loc = realspace_base_coord_to_alt(real_loc, study_coord_frame(ui_study->study));
ui_study_cb.c:      if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:	if (roi_undrawn(ui_study->current_roi))
ui_study_cb.c:      outline_color = color_table_outline_color(ui_study->current_volume->color_table, TRUE);
ui_study_cb.c:      if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:	if ((roi_undrawn(ui_study->current_roi)) && (event->button.button == 1)) {
ui_study_cb.c:	  switch(ui_study->current_roi->type) 
ui_study_cb.c:	    study_set_view_thickness(ui_study->study, 0);
ui_study_cb.c:      if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:	  if ( roi_undrawn(ui_study->current_roi)) {
ui_study_cb.c:	    study_set_view_thickness(ui_study->study,REALPOINT_MAX_DIM(rp_diff(view_loc, initial_loc)));
ui_study_cb.c:      if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:	if (roi_undrawn(ui_study->current_roi) && dragging) {
ui_study_cb.c:	  diff_rp.z = study_view_thickness(ui_study->study)/2.0;
ui_study_cb.c:	  rs_set_offset(&ui_study->current_roi->coord_frame,
ui_study_cb.c:	  rs_set_axis(&ui_study->current_roi->coord_frame, rs_all_axis(*canvas_coord_frame_p));
ui_study_cb.c:	  ui_study->current_roi->corner = 
ui_study_cb.c:	    rp_abs(realspace_base_coord_to_alt(p1,ui_study->current_roi->coord_frame));
ui_study_cb.c:	  switch(ui_study->current_roi->type) {
ui_study_cb.c:	      ui_volume_list_t * temp_list = ui_study->current_volumes;
ui_study_cb.c:		real_center = realspace_alt_coord_to_base(study_view_center(ui_study->study),
ui_study_cb.c:							  study_coord_frame(ui_study->study));
ui_study_cb.c:					 realspace_get_view_normal(study_coord_frame_axis(ui_study->study),
ui_study_cb.c:	    study_set_view_center(ui_study->study, initial_loc);
ui_study_cb.c:	    p0 = realspace_alt_coord_to_alt(initial_loc, study_coord_frame(ui_study->study),
ui_study_cb.c:	    p1 = realspace_alt_coord_to_alt(view_loc, study_coord_frame(ui_study->study),
ui_study_cb.c:						  study_coord_frame(ui_study->study));
ui_study_cb.c:	    study_set_view_center(ui_study->study, view_loc);
ui_study_cb.c:	    study_set_view_center(ui_study->study, view_loc);
ui_study_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_cb.c:  if (ui_study->current_volumes == NULL)
ui_study_cb.c:    view_center = study_view_center(ui_study->study);
ui_study_cb.c:    study_set_view_center(ui_study->study, view_center);
ui_study_cb.c:    view_center = study_view_center(ui_study->study);
ui_study_cb.c:    study_set_view_center(ui_study->study, view_center);
ui_study_cb.c:    view_center = study_view_center(ui_study->study);
ui_study_cb.c:    study_set_view_center(ui_study->study, view_center);
ui_study_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_cb.c:  if (study_zoom(ui_study->study) != GTK_ADJUSTMENT(adjustment)->value) {
ui_study_cb.c:    study_set_zoom(ui_study->study, GTK_ADJUSTMENT(adjustment)->value);
ui_study_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_cb.c:  if (study_view_thickness(ui_study->study) != GTK_ADJUSTMENT(adjustment)->value) {
ui_study_cb.c:    study_set_view_thickness(ui_study->study, GTK_ADJUSTMENT(adjustment)->value);
ui_study_cb.c:  temp_volumes = ui_volume_list_return_volume_list(ui_study->current_volumes);
ui_study_cb.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_series_create(ui_study->study, temp_volumes, view, series_type);
ui_study_cb.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  temp_volumes = ui_volume_list_return_volume_list(ui_study->current_volumes);
ui_study_cb.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_rendering_create(temp_volumes, study_coord_frame(ui_study->study),
ui_study_cb.c:		      study_view_time(ui_study->study), 
ui_study_cb.c:		      study_view_duration(ui_study->study),
ui_study_cb.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  temp_volumes = ui_volume_list_return_volume_list(ui_study->current_volumes);
ui_study_cb.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_rendering_create(temp_volumes, study_coord_frame(ui_study->study),
ui_study_cb.c:		      study_view_time(ui_study->study), 
ui_study_cb.c:		      study_view_duration(ui_study->study),
ui_study_cb.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_study->threshold_dialog = NULL;
ui_study_cb.c:  ui_volume_list_item = ui_volume_list_get_ui_volume(ui_study->current_volumes,ui_study->current_volume);
ui_study_cb.c:  if (ui_study->current_volume == NULL)
ui_study_cb.c:  if (ui_study->threshold_dialog != NULL) 
ui_study_cb.c:  ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  ui_study->threshold_dialog = amitk_threshold_dialog_new(ui_study->current_volume);
ui_study_cb.c:  ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:  gtk_signal_connect(GTK_OBJECT(ui_study->threshold_dialog), "threshold_changed",
ui_study_cb.c:  gtk_signal_connect(GTK_OBJECT(ui_study->threshold_dialog), "color_changed",
ui_study_cb.c:  gtk_signal_connect(GTK_OBJECT(ui_study->threshold_dialog), "close",
ui_study_cb.c:  gtk_widget_show(GTK_WIDGET(ui_study->threshold_dialog));
ui_study_cb.c:  if (study_scaling(ui_study->study) != i_scaling) {
ui_study_cb.c:    study_set_scaling(ui_study->study, i_scaling);
ui_study_cb.c:    if (study_volumes(ui_study->study) != NULL)
ui_study_cb.c:			       (GNOME_IS_APP(ui_study->app) ? 
ui_study_cb.c:				GTK_WINDOW(ui_study->app) : NULL));
ui_study_cb.c:    roi->grain = ui_study->default_roi_grain;
ui_study_cb.c:    study_add_roi(ui_study->study, roi);
ui_study_cb.c:      	study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study_cb.c:      study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study_cb.c:      ui_study->current_mode = VOLUME_MODE;
ui_study_cb.c:      if (!ui_volume_list_includes_volume(ui_study->current_volumes, volume))
ui_study_cb.c:	ui_study->current_volumes = ui_volume_list_add_volume(ui_study->current_volumes, volume, leaf);
ui_study_cb.c:      if (ui_study->current_volume == NULL)
ui_study_cb.c:      ui_study->current_volumes =  ui_volume_list_remove_volume(ui_study->current_volumes, volume);
ui_study_cb.c:      if (ui_study->current_volume == volume) {
ui_study_cb.c:	ui_study->current_volume = ui_volume_list_get_first_volume(ui_study->current_volumes);
ui_study_cb.c:	if (ui_study->current_mode == VOLUME_MODE)
ui_study_cb.c:      if (ui_study->threshold_dialog != NULL)
ui_study_cb.c:      	if (amitk_threshold_dialog_volume(AMITK_THRESHOLD_DIALOG(ui_study->threshold_dialog)) == volume)
ui_study_cb.c:      	  gtk_signal_emit_by_name(GTK_OBJECT(ui_study->threshold_dialog), "delete_event", NULL, ui_study);
ui_study_cb.c:      ui_study->current_mode = VOLUME_MODE;
ui_study_cb.c:      ui_study->current_volume = volume;
ui_study_cb.c:      ui_volume_list_item = ui_volume_list_get_ui_volume(ui_study->current_volumes,ui_study->current_volume);
ui_study_cb.c:      	  gtk_signal_emit_by_name(GTK_OBJECT(ui_study->threshold_dialog), "delete_event", NULL, ui_study);
ui_study_cb.c:	  if (ui_study->threshold_dialog != NULL)
ui_study_cb.c:	    amitk_threshold_dialog_new_volume(AMITK_THRESHOLD_DIALOG(ui_study->threshold_dialog), volume);
ui_study_cb.c:      ui_common_place_cursor(UI_CURSOR_WAIT, GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:      ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[0]));
ui_study_cb.c:      if (!ui_roi_list_includes_roi(ui_study->current_rois, roi)) {
ui_study_cb.c:	ui_study->current_rois =  ui_roi_list_add_roi(ui_study->current_rois, roi, roi_canvas_item, leaf);
ui_study_cb.c:      if (ui_study->current_roi == roi) {
ui_study_cb.c:	ui_study->current_roi = NULL;
ui_study_cb.c:	if (ui_study->current_mode == ROI_MODE) {
ui_study_cb.c:	  ui_study->current_mode = VOLUME_MODE;
ui_study_cb.c:      ui_study->current_rois = ui_roi_list_remove_roi(ui_study->current_rois, roi);
ui_study_cb.c:      ui_study->current_mode = ROI_MODE;
ui_study_cb.c:      ui_study->current_roi = roi;
ui_study_cb.c:      roi_center = realspace_base_coord_to_alt(roi_center, study_coord_frame(ui_study->study));
ui_study_cb.c:      if ( !roi_undrawn(roi) && !REALPOINT_EQUAL(roi_center, study_view_center(ui_study->study))) {
ui_study_cb.c:	study_set_view_center(ui_study->study, roi_center);
ui_study_cb.c:  ui_volume_list_t * volume_list = ui_study->current_volumes;
ui_study_cb.c:  ui_roi_list_t * roi_list = ui_study->current_rois;
ui_study_cb.c:  if ((ui_study->current_volumes == NULL) && (ui_study->current_rois == NULL))
ui_study_cb.c:  current_volumes = ui_study->current_volumes;
ui_study_cb.c:  current_rois = ui_study->current_rois;
ui_study_cb.c:  if (GNOME_IS_APP(ui_study->app))
ui_study_cb.c:						     GTK_WINDOW(ui_study->app));
ui_study_cb.c:  study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study_cb.c:  while (ui_study->current_volumes != NULL) {
ui_study_cb.c:    volume = volume_add_reference(ui_study->current_volumes->volume);
ui_study_cb.c:    gtk_tree_remove_item(GTK_TREE(subtree), ui_study->current_volumes->tree_leaf);
ui_study_cb.c:    if (ui_study->current_volume==volume) {
ui_study_cb.c:      ui_study->current_volume = NULL;
ui_study_cb.c:      if (ui_study->threshold_dialog != NULL)
ui_study_cb.c:	gtk_signal_emit_by_name(GTK_OBJECT(ui_study->threshold_dialog), "delete_event", NULL, ui_study);
ui_study_cb.c:    ui_study->current_volumes = ui_volume_list_remove_volume(ui_study->current_volumes, volume);
ui_study_cb.c:    study_remove_volume(ui_study->study, volume);
ui_study_cb.c:  while (ui_study->current_rois != NULL) {
ui_study_cb.c:    roi = roi_add_reference(ui_study->current_rois->roi);
ui_study_cb.c:    gtk_tree_remove_item(GTK_TREE(subtree), ui_study->current_rois->tree_leaf);
ui_study_cb.c:    if (ui_study->current_roi == roi)
ui_study_cb.c:      ui_study->current_roi = NULL;
ui_study_cb.c:    study_remove_roi(ui_study->study, roi);
ui_study_cb.c:    ui_study->current_rois = ui_roi_list_remove_roi(ui_study->current_rois, roi);
ui_study_cb.c:  gtk_object_set_data(GTK_OBJECT(ui_study->tree), "active_row", NULL);
ui_study_cb.c:  if (study_interpolation(ui_study->study) != i_interpolation) {
ui_study_cb.c:    study_set_interpolation(ui_study->study, i_interpolation);
ui_study_cb.c:    if (study_volumes(ui_study->study) != NULL) 
ui_study_cb.c:  gtk_signal_emit_by_name(GTK_OBJECT(ui_study->app), "delete_event", NULL, ui_study);
ui_study_cb.c:  if (ui_study->threshold_dialog != NULL)
ui_study_cb.c:    gtk_signal_emit_by_name(GTK_OBJECT(ui_study->threshold_dialog), "delete_event", NULL, ui_study);
ui_study_cb.c:  if (ui_study->time_dialog != NULL)
ui_study_cb.c:    gtk_signal_emit_by_name(GTK_OBJECT(ui_study->time_dialog), "close", ui_study);
ui_study_dialog.c:  if (ui_study->study_dialog != NULL)
ui_study_dialog.c:  ui_study->study_dialog = study_dialog; /* save a pointer to the dialog */
ui_study_dialog.c:  study_new_info = study_copy(ui_study->study);
ui_study_dialog_cb.c:  center = realspace_alt_coord_to_base(study_view_center(ui_study->study),
ui_study_dialog_cb.c:  temp = realspace_alt_coord_to_base(study_view_center(ui_study->study), study_new_info->coord_frame);
ui_study_dialog_cb.c:  center = study_view_center(ui_study->study);
ui_study_dialog_cb.c:  temp = realspace_alt_coord_to_base(study_view_center(ui_study->study), study_new_info->coord_frame);
ui_study_dialog_cb.c:  study_new_info = gtk_object_get_data(GTK_OBJECT(ui_study->study_dialog),"study_new_info");
ui_study_dialog_cb.c:  center = realspace_alt_coord_to_base(study_view_center(ui_study->study),
ui_study_dialog_cb.c:				       study_coord_frame(ui_study->study));
ui_study_dialog_cb.c:  study_set_name(ui_study->study, study_name(study_new_info));
ui_study_dialog_cb.c:  study_set_coord_frame(ui_study->study, study_coord_frame(study_new_info));
ui_study_dialog_cb.c:  study_set_view_center(ui_study->study, study_view_center(study_new_info));
ui_study_dialog_cb.c:  study_set_view_thickness(ui_study->study, study_view_thickness(study_new_info));
ui_study_dialog_cb.c:  study_set_view_time(ui_study->study, study_view_time(study_new_info));
ui_study_dialog_cb.c:  study_set_view_duration(ui_study->study, study_view_duration(study_new_info));
ui_study_dialog_cb.c:  study_set_zoom(ui_study->study, study_zoom(study_new_info));
ui_study_dialog_cb.c:  study_set_interpolation(ui_study->study, study_interpolation(study_new_info));
ui_study_dialog_cb.c:  study_set_scaling(ui_study->study, study_scaling(study_new_info));
ui_study_dialog_cb.c:  study_leaf = gtk_object_get_data(GTK_OBJECT(ui_study->tree), "study_leaf");
ui_study_dialog_cb.c:  gtk_label_set_text(GTK_LABEL(label), study_name(ui_study->study));
ui_study_dialog_cb.c:  //  gtk_ctree_node_get_pixtext(GTK_CTREE(ui_study->tree), ui_study->tree_study, 
ui_study_dialog_cb.c:  //  gtk_ctree_node_set_pixtext(GTK_CTREE(ui_study->tree), ui_study->tree_study, 
ui_study_dialog_cb.c:  //			     UI_STUDY_TREE_TEXT_COLUMN, study_name(ui_study->study), spacing, pixmap, NULL);
ui_study_dialog_cb.c:  if (GPOINTER_TO_INT(gtk_object_get_data(GTK_OBJECT(ui_study->study_dialog), "axis_changed"))) {
ui_study_dialog_cb.c:    gtk_object_set_data(GTK_OBJECT(ui_study->study_dialog), "axis_changed", GINT_TO_POINTER(FALSE));
ui_study_dialog_cb.c:    study_set_view_center(ui_study->study,
ui_study_dialog_cb.c:			  realspace_base_coord_to_alt(center, study_coord_frame(ui_study->study)));
ui_study_dialog_cb.c:  gtk_widget_destroy(GTK_WIDGET(ui_study->study_dialog));
ui_study_dialog_cb.c:  ui_study->study_dialog = NULL;
ui_study_menus.c:  gnome_app_create_menus(GNOME_APP(ui_study->app), study_main_menu);
ui_study_rois_cb.c:  if (ui_study->current_mode == VOLUME_MODE) 
ui_study_rois_cb.c:  if (ui_study->current_volume == NULL)
ui_study_rois_cb.c:  if (study_volumes(ui_study->study) == NULL)
ui_study_rois_cb.c:    current_slices[i_view] = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[i_view]), "slices");
ui_study_rois_cb.c:    current_roi_list_item = ui_roi_list_get_ui_roi(ui_study->current_rois, roi);
ui_study_rois_cb.c:  gnome_canvas_w2c_d(ui_study->canvas[view_static], event->button.x, event->button.y, 
ui_study_rois_cb.c:  canvas_coord_frame_p = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view_static]), "coord_frame");
ui_study_rois_cb.c:  canvas_far_corner = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view_static]), "far_corner");
ui_study_rois_cb.c:  rgb_image = gtk_object_get_data(GTK_OBJECT(ui_study->canvas[view_static]), "rgb_image");
ui_study_rois_cb.c:  canvas_rp = ui_study_cp_2_rp(ui_study->canvas[view_static], canvas_cp, 
ui_study_rois_cb.c:				study_view_thickness(ui_study->study));
ui_study_rois_cb.c:      ui_common_place_cursor(UI_CURSOR_OLD_ROI_MODE, GTK_WIDGET(ui_study->canvas[view_static]));
ui_study_rois_cb.c:      ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[view_static]));
ui_study_rois_cb.c:      ui_common_remove_cursor(GTK_WIDGET(ui_study->canvas[view_static]));
ui_study_rois_cb.c:					    study_coord_frame(ui_study->study));
ui_study_rois_cb.c:	study_set_view_center(ui_study->study, center);
ui_study_rois_cb.c:  current_ui_volume_list = ui_study->current_volumes;
ui_study_rois_cb.c:    current_roi_list = roi_list_copy(study_rois(ui_study->study));
ui_study_rois_cb.c:    temp_ui_roi_list = ui_study->current_rois;
ui_study_rois_cb.c:  title = g_strdup_printf("Roi Analysis: Study %s", study_name(ui_study->study));
ui_study_rois_cb.c:			 study_name(ui_study->study));
ui_study_toolbar.c:  gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(scaling_list[study_scaling(ui_study->study)].widget),
ui_study_toolbar.c:  gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(interpolation_list[study_interpolation(ui_study->study)].widget),
ui_study_toolbar.c:  adjustment = gtk_adjustment_new(study_zoom(ui_study->study), 0.2,5,0.2, 0.25, 0.25);
ui_study_toolbar.c:  ui_study->thickness_adjustment = adjustment;
ui_study_toolbar.c:  ui_study->thickness_spin_button = spin_button = gtk_spin_button_new(GTK_ADJUSTMENT(adjustment),1.0, 2);
ui_study_toolbar.c:				study_view_time(ui_study->study),
ui_study_toolbar.c:				study_view_duration(ui_study->study));
ui_study_toolbar.c:  ui_study->time_button = button;
ui_study_toolbar.c:  gnome_app_set_toolbar(GNOME_APP(ui_study->app), GTK_TOOLBAR(toolbar));
ui_time_dialog.c:  if (ui_study->time_dialog == NULL)
ui_time_dialog.c:  clist = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "clist");
ui_time_dialog.c:  new_time = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "new_time");
ui_time_dialog.c:  ui_volume_list = ui_study->current_volumes;
ui_time_dialog.c:    ui_volume_list = ui_study->current_volumes;
ui_time_dialog.c:  if (ui_study->time_dialog != NULL)
ui_time_dialog.c:  ui_study->time_dialog = time_dialog; /* save a pointer to the dialog */
ui_time_dialog.c:  new_time->time = study_view_time(ui_study->study);
ui_time_dialog.c:  new_time->duration = study_view_duration(ui_study->study);
ui_time_dialog_cb.c:  new_time = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "new_time");
ui_time_dialog_cb.c:  gnome_property_box_changed(GNOME_PROPERTY_BOX(ui_study->time_dialog));
ui_time_dialog_cb.c:  new_time = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "new_time");
ui_time_dialog_cb.c:  gnome_property_box_changed(GNOME_PROPERTY_BOX(ui_study->time_dialog));
ui_time_dialog_cb.c:  new_time = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "new_time");
ui_time_dialog_cb.c:  study_set_view_time(ui_study->study, new_time->time);
ui_time_dialog_cb.c:  study_set_view_duration(ui_study->study, new_time->duration);
ui_time_dialog_cb.c:  label = GTK_LABEL(GTK_BIN(ui_study->time_button)->child);
ui_time_dialog_cb.c:				study_view_time(ui_study->study),
ui_time_dialog_cb.c:				study_view_time(ui_study->study)+study_view_duration(ui_study->study));
ui_time_dialog_cb.c:  new_time = gtk_object_get_data(GTK_OBJECT(ui_study->time_dialog), "new_time");
ui_time_dialog_cb.c:  gtk_widget_destroy(GTK_WIDGET(ui_study->time_dialog));
ui_time_dialog_cb.c:  ui_study->time_dialog = NULL;
ui_volume_dialog.c:  ui_volume_list_item = ui_volume_list_get_ui_volume(ui_study->current_volumes, volume);
ui_volume_dialog.c:  if (ui_study->threshold_dialog != NULL)
ui_volume_dialog.c:    if (amitk_threshold_dialog_volume(AMITK_THRESHOLD_DIALOG(ui_study->threshold_dialog)) == volume)
ui_volume_dialog.c:      gtk_signal_emit_by_name(GTK_OBJECT(ui_study->threshold_dialog), "delete_event", NULL, ui_study);
ui_volume_dialog_cb.c:			   realspace_get_view_normal(study_coord_frame_axis(ui_study->study), i_view),
ui_volume_dialog_cb.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_volume_dialog_cb.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_volume_dialog_cb.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_volume_dialog_cb.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_volume_dialog_cb.c:    icon = gdk_pixmap_create_from_xpm_d(gtk_widget_get_parent_window(ui_study->tree),
ui_volume_dialog_cb.c:  if (ui_volume_list_includes_volume(ui_study->current_volumes, ui_volume_list_item->volume))
